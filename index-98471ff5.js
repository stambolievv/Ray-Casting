/**
 * @name ray-casting
 * @description Visualization of Ray Casting and Line-Line Intersection.
 *
 * @version 1.0.0
 * @author Deyan 'stambolievv' Stamboliev
 * @license Apache-2.0
 */
(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))n(e);new MutationObserver(e=>{for(const s of e)if(s.type==="childList")for(const h of s.addedNodes)h.tagName==="LINK"&&h.rel==="modulepreload"&&n(h)}).observe(document,{childList:!0,subtree:!0});function i(e){const s={};return e.integrity&&(s.integrity=e.integrity),e.referrerpolicy&&(s.referrerPolicy=e.referrerpolicy),e.crossorigin==="use-credentials"?s.credentials="include":e.crossorigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function n(e){if(e.ep)return;e.ep=!0;const s=i(e);fetch(e.href,s)}})();class o{constructor({x:t=0,y:i=0}={}){this._x=t,this._y=i}set x(t){this._x=t}get x(){return this._x}set y(t){this._y=t}get y(){return this._y}get width(){return this._x}get height(){return this._y}get magnitude(){return Math.sqrt(this._x**2+this._y**2)}get length(){return Math.sqrt(this._x**2+this._y**2)}get direction(){return Math.atan2(this._y,this._x)}get directionD(){return Math.atan2(this._y,this._x)*180/Math.PI}get angle(){return Math.atan2(this._y,this._x)}get angleD(){return Math.atan2(this._y,this._x)*180/Math.PI}get absoluteX(){return Math.abs(this._x)}get absoluteY(){return Math.abs(this._y)}set(t,i){return this._x=t,this._y=i!=null?i:t,this}add(t){return new o({x:this._x+t.x,y:this._y+t.y})}addSelf(t){return this._x+=t.x,this._y+=t.y,this}subtract(t){return new o({x:this._x-t.x,y:this._y-t.y})}subtractSelf(t){return this._x-=t.x,this._y-=t.y,this}multiply(t){return new o({x:this._x*t.x,y:this._y*t.y})}multiplySelf(t){return this._x*=t.x,this._y*=t.y,this}divide(t){return new o({x:this._x/t.x,y:this._y/t.y})}divideSelf(t){return this._x/=t.x,this._y/=t.y,this}addScalar(t,i){return new o({x:this._x+t,y:this._y+(i!=null?i:t)})}addScalarSelf(t,i){return this._x+=t,this._y+=i!=null?i:t,this}subtractScalar(t,i){return new o({x:this._x-t,y:this._y-(i!=null?i:t)})}subtractScalarSelf(t,i){return this._x-=t,this._y-=i!=null?i:t,this}multiplyScalar(t,i){return new o({x:this._x*t,y:this._y*(i!=null?i:t)})}multiplyScalarSelf(t,i){return this._x*=t,this._y*=i!=null?i:t,this}divideScalar(t,i){return new o({x:this._x/t,y:this._y/(i!=null?i:t)})}divideScalarSelf(t,i){return this._x/=t,this._y/=i!=null?i:t,this}dotProduct(t){return this._x*t.x+this._y*t.y}crossProduct(t){return this._x*t.y-this._y*t.x}distance(t){return Math.sqrt((this._x-t.x)**2+(this._y-t.y)**2)}lerp(t,i){return this._x+=(t._x-this._x)*i,this._y+=(t._y-this._y)*i,this}rotate(t,i){const n=Math.PI/180*i,e=Math.cos(n),s=Math.sin(n),h=e*(this._x-t.x)+s*(this._y-t.y)+t.x,y=e*(this._y-t.y)-s*(this._x-t.x)+t.y;return this._x=h,this._y=y,this}ceil(){return this._y=Math.ceil(this._y),this._x=Math.ceil(this._x),this}floor(){return this._y=Math.floor(this._y),this._x=Math.floor(this._x),this}round(){return this._y=Math.round(this._y),this._x=Math.round(this._x),this}min(t){return this._x>t.x&&(this._x=t.x),this._y>t.y&&(this._y=t.y),this}max(t){return this._x<t.x&&(this._x=t.x),this._y<t.y&&(this._y=t.y),this}equals(t){return this._x===t.x&&this._y===t.y}clear(){return this._x=0,this._y=0,this}invert(){return this._x*=-1,this._y*=-1,this}normalize(){return new o({x:this._x/Math.sqrt(this._x**2+this._y**2)||1,y:this._y/Math.sqrt(this._x**2+this._y**2)||1})}copy(t){return this._x=t.x,this._y=t.y,this}clone(){return new o({x:this._x,y:this._y})}toString(){return`x: ${this._x}, y: ${this.y}`}toArray(){return[this._x,this._y]}toObject(){return{x:this._x,y:this._y}}}function m(r,t){const i=new Array(r);for(let n=0;n<i.length;n++){const e=typeof t=="function"?t(n):t;i[n]=typeof e<"u"?e:n}return i}function P(r,t){return Math.random()*(t-r)+r}function a(r,t){return Math.floor(P(r,t+1))}function b(r,t,i){return(r-t[0])/(t[1]-t[0])*(i[1]-i[0])+i[0]}function M(){return`#${Math.floor(Math.random()*16777215).toString(16)}`}function S(r){return Array.isArray?Array.isArray(r):r instanceof Array}class p{constructor({position:t={x:0,y:0},length:i=300,angle:n=0,config:e={}}={}){this.startPoint=new o({x:t.x,y:t.y}),this.endPoint=new o({x:t.x,y:t.y+i}).rotate(this.startPoint,n),this.intersectionPoint=this.endPoint.clone(),this.length=this.startPoint.distance(this.endPoint),this.angle=n,this.config=e,this.color=this.config.color||M()}draw(t){const{gradient:i,color:n=this.color,lineWidth:e}=this.config,s=t.createLinearGradient(...this.startPoint.toArray(),...this.endPoint.toArray());i&&Object.entries(i).forEach(([h,y])=>s.addColorStop(h,y)),t.beginPath(),t.moveTo(...this.startPoint.toArray()),t.lineTo(...this.intersectionPoint.toArray()),t.closePath(),t.lineWidth=e,t.strokeStyle=i?s:n,t.stroke()}update(t){const{x:i,y:n}=t;this.startPoint.set(i,n),this.endPoint.set(i,n+this.length).rotate(this.startPoint,this.angle)}intersection(t){const i=this.startPoint,n=this.endPoint,e=t.startPoint,s=t.endPoint,h=e.subtract(i).crossProduct(n.subtract(i)),y=n.subtract(i).crossProduct(s.subtract(e));if(h===0&&y===0)return i.equals(e)||n.equals(e)||i.equals(s)||n.equals(s)?{type:"colinear-overlapping"}:[...e.subtract(i).toArray(),...e.subtract(n).toArray(),...s.subtract(i).toArray(),...s.subtract(n).toArray()].every(w=>w<0)?{type:"colinear-joint"}:{type:"colinear-disjoint"};if(y===0)return{type:"parallel-non-intersecting"};const f=h/y,l=e.subtract(i).crossProduct(s.subtract(e))/y;return l>=0&&l<=1&&f>=0&&f<=1?{type:"intersection",point:new o(i.add(n.subtract(i).multiplyScalar(l)).toObject())}:{type:"no-intersection"}}}class A{constructor({position:t={x:0,y:0},amount:i=360,length:n=1e3,angle:e=[0,360],config:s={}}={}){this.lines=m(i,h=>{const y={position:t,length:n,angle:b(h,[0,i],e),config:{gradient:s.gradient,color:s.color,lineWidth:s.lineWidth}};return new p(y)})}draw(t){this.lines.forEach(i=>i.draw(t))}update(t){this.lines.forEach(i=>i.update(t))}intersection(t){const i=S(t)?t:[t];this.lines.forEach(n=>{const e={closest:null,record:1/0};i.forEach(s=>{const h=n.intersection(s);if(h.point){const y=n.startPoint.distance(h.point);y<e.record&&(e.record=y,e.closest=h.point)}e.closest?n.intersectionPoint=e.closest:n.intersectionPoint=n.endPoint.clone()})})}}const c={scene:{backgroundColor:"#111"},rays:{amount:1e3,length:500,angle:[0,360],gradient:{0:"white",.1:"gray",1:"transparent"},lineWidth:1},line:{lineWidth:3,color:"blue"}},u=document.getElementById("canvas");u.width=window.innerWidth;u.height=window.innerHeight;const d=u.getContext("2d");d.imageSmoothingEnabled=!1;const x={x:0,y:0},_=new A({...c.rays,config:c.rays}),g=m(a(10,15),()=>{const r={position:{x:a(0,u.width),y:a(0,u.height)},length:a(100,500),angle:a(0,360),config:c.line};return new p(r)});(function r(t){window.requestAnimationFrame(r),d.fillStyle=c.scene.backgroundColor,d.fillRect(0,0,u.width,u.height),_.draw(d),_.update(x),_.intersection(g),g.forEach(i=>i.draw(d))})();window.addEventListener("pointermove",r=>{const t=u.getBoundingClientRect();x.x=(r.clientX-t.left)/(t.right-t.left)*u.width,x.y=(r.clientY-t.top)/(t.bottom-t.top)*u.height});
